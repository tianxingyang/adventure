[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "adventure-game-framework"
version = "0.1.0"
description = "A web-based framework for creating and playing text adventure games with visual node editor"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Adventure Game Framework", email = "dev@example.com"}
]
keywords = ["adventure", "game", "framework", "interactive", "storytelling"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "psycopg2-binary>=2.9.9",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.2",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/example/adventure-game-framework"
Repository = "https://github.com/example/adventure-game-framework"
Documentation = "https://adventure-game-framework.readthedocs.io"
Changelog = "https://github.com/example/adventure-game-framework/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["adventure_game*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=adventure_game --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["adventure_game"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]